{"version":3,"sources":["webpack:///./index.js"],"names":["newDate","selector","targetDate","days","hours","mins","secs","daysRef","textContent","hoursRef","minsRef","secsRef","time","Math","floor","timeLeft","setInterval","getTime","Date","now","countingRemainingTime","this","document","querySelector","init"],"mappings":"+PAyCMA,EAAU,IArCZ,SAAYC,EAAUC,GAAY,8BAUvB,SAACC,EAAMC,EAAOC,EAAMC,GAC3BN,EAAQO,QAAQC,YAAcL,EAC9BH,EAAQS,SAASD,YAAcJ,EAC/BJ,EAAQU,QAAQF,YAAcH,EAC9BL,EAAQW,QAAQH,YAAcF,KAdA,gCAkBV,SAACM,GACrB,IAAMT,EAAOU,KAAKC,MAAMF,EAAO,OACzBR,EAAQS,KAAKC,MAAOF,EAAO,MAAR,MACnBP,EAAOQ,KAAKC,MAAOF,EAAO,KAAR,KAClBN,EAAOO,KAAKC,MAAOF,EAAO,IAAe,KAC/C,EAAKG,SAASZ,EAAMC,EAAOC,EAAMC,MAvBH,eA2B3B,WACHU,aAAY,WACR,IAAMJ,EAAOZ,EAAQE,WAAWe,UAAYC,KAAKC,MACjD,EAAKC,sBAAsBR,KAC5B,QA9BLS,KAAKpB,SAAWA,EAChBoB,KAAKnB,WAAaA,EAClBmB,KAAKd,QAAUe,SAASC,cAAiBtB,EAA1B,4BACfoB,KAAKZ,SAAWa,SAASC,cAAiBtB,EAA1B,6BAChBoB,KAAKX,QAAUY,SAASC,cAAiBtB,EAA1B,4BACfoB,KAAKV,QAAUW,SAASC,cAAiBtB,EAA1B,4BACfoB,KAAKG,OA8BK,CAAmB,WAAY,IAAIN,KAAK,mB","file":"main.5e0d1d8d519e8a087672.js","sourcesContent":["import './styles.css';\n\n\nclass CountdownTimer {\n    constructor(selector, targetDate) {\n      this.selector = selector;\n      this.targetDate = targetDate;\n      this.daysRef = document.querySelector(`${selector} span[data-value=\"days\"]`);\n      this.hoursRef = document.querySelector(`${selector} span[data-value=\"hours\"]`);\n      this.minsRef = document.querySelector(`${selector} span[data-value=\"mins\"]`);\n      this.secsRef = document.querySelector(`${selector} span[data-value=\"secs\"]`);\n      this.init ()\n    };\n\n    timeLeft = (days, hours, mins, secs) => {\n        newDate.daysRef.textContent = days;\n        newDate.hoursRef.textContent = hours;\n        newDate.minsRef.textContent = mins;\n        newDate.secsRef.textContent = secs;\n    };\n\n\n    countingRemainingTime = (time) => {\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n        const secs = Math.floor((time % (1000 * 60)) / 1000);\n        this.timeLeft(days, hours, mins, secs);\n    \n    };\n\n    init = () => {\n        setInterval(() => {\n            const time = newDate.targetDate.getTime() - Date.now();\n            this.countingRemainingTime(time);\n        }, 1000);\n    };\n\n};\n\n\nconst newDate = new CountdownTimer('#timer-1', new Date('Jul 01, 2021'));\n\n\n// const daysRef = document.querySelector(`span[data-value=\"days\"]`);\n// const hoursRef = document.querySelector(`span[data-value=\"hours\"]`);\n// const minsRef = document.querySelector(`span[data-value=\"mins\"]`);\n// const secsRef = document.querySelector(`span[data-value=\"secs\"]`);\n\n\n// class CountdownTimer {\n//     constructor(selector, targetDate) {\n//       this.selector = selector;\n//       this.targetDate = targetDate;\n//     };\n// };\n\n\n// const newDate = new CountdownTimer('#timer-1', new Date('Jul 01, 2021'));\n\n\n// const timeLeft = (days, hours, mins, secs) => {\n//     daysRef.textContent = days;\n//     hoursRef.textContent = hours;\n//     minsRef.textContent = mins;\n//     secsRef.textContent = secs;\n// };\n\n\n// const countingRemainingTime = (time) => {\n//     const days = Math.floor(time / (1000 * 60 * 60 * 24));\n//     const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n//     const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n//     const secs = Math.floor((time % (1000 * 60)) / 1000);\n//     timeLeft(days, hours, mins, secs);\n\n// };\n\n\n// setInterval(() => {\n//     const time = newDate.targetDate.getTime() - Date.now();\n//     countingRemainingTime(time);\n// }, 1000);"],"sourceRoot":""}