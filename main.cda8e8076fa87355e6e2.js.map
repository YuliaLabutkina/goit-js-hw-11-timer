{"version":3,"sources":["webpack:///./index.js"],"names":["newDate","selector","targetDate","this","daysRef","document","querySelector","hoursRef","minsRef","secsRef","Date","countingRemainingTime","time","days","hours","mins","secs","textContent","timeLeft","Math","floor","setInterval","getTime","now"],"mappings":"kHAAA,qBAeMA,EAAU,IAXZ,SAAYC,EAAUC,GACpBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAClBC,KAAKC,QAAUC,SAASC,cAAiBL,EAA1B,4BACfE,KAAKI,SAAWF,SAASC,cAAiBL,EAA1B,6BAChBE,KAAKK,QAAUH,SAASC,cAAiBL,EAA1B,4BACfE,KAAKM,QAAUJ,SAASC,cAAiBL,EAA1B,4BAKL,CAAmB,WAAY,IAAIS,KAAK,iBAWlDC,EAAwB,SAACC,IARd,SAACC,EAAMC,EAAOC,EAAMC,GACjChB,EAAQI,QAAQa,YAAcJ,EAC9Bb,EAAQO,SAASU,YAAcH,EAC/Bd,EAAQQ,QAAQS,YAAcF,EAC9Bf,EAAQS,QAAQQ,YAAcD,EAS9BE,CAJaC,KAAKC,MAAMR,EAAO,OACjBO,KAAKC,MAAOR,EAAO,MAAR,MACZO,KAAKC,MAAOR,EAAO,KAAR,KACXO,KAAKC,MAAOR,EAAO,IAAe,OAMnDS,aAAY,WACR,IAAMT,EAAOZ,EAAQE,WAAWoB,UAAYZ,KAAKa,MACjDZ,EAAsBC,KACvB,O","file":"main.cda8e8076fa87355e6e2.js","sourcesContent":["import './styles.css';\n\n\nclass CountdownTimer {\n    constructor(selector, targetDate) {\n      this.selector = selector;\n      this.targetDate = targetDate;\n      this.daysRef = document.querySelector(`${selector} span[data-value=\"days\"]`);\n      this.hoursRef = document.querySelector(`${selector} span[data-value=\"hours\"]`);\n      this.minsRef = document.querySelector(`${selector} span[data-value=\"mins\"]`);\n      this.secsRef = document.querySelector(`${selector} span[data-value=\"secs\"]`);\n    }\n};\n\n\nconst newDate = new CountdownTimer('#timer-1', new Date('Jul 01, 2021'));\n\n\nconst timeLeft = (days, hours, mins, secs) => {\n    newDate.daysRef.textContent = days;\n    newDate.hoursRef.textContent = hours;\n    newDate.minsRef.textContent = mins;\n    newDate.secsRef.textContent = secs;\n};\n\n\nconst countingRemainingTime = (time) => {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n    timeLeft(days, hours, mins, secs);\n\n};\n\n\nsetInterval(() => {\n    const time = newDate.targetDate.getTime() - Date.now();\n    countingRemainingTime(time);\n}, 1000);"],"sourceRoot":""}