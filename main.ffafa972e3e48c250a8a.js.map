{"version":3,"sources":["webpack:///./index.js"],"names":["daysRef","document","querySelector","hoursRef","minsRef","secsRef","newDate","selector","targetDate","this","Date","timeLeft","days","hours","mins","secs","textContent","setInterval","time","Math","floor","countingRemainingTime","getTime","now"],"mappings":"kHAAA,qBAGMA,EAAUC,SAASC,cAAc,2BACjCC,EAAWF,SAASC,cAAc,4BAClCE,EAAUH,SAASC,cAAc,2BACjCG,EAAUJ,SAASC,cAAc,2BAWjCI,EAAU,IAPZ,YAAsC,IAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAKR,CAAmB,CAC/BD,SAAU,WACVC,WAAY,IAAIE,KAAK,kBAcnBC,EAAW,SAACC,EAAMC,EAAOC,EAAMC,GACjCf,EAAQgB,YAAcJ,EACtBT,EAASa,YAAcH,EACvBT,EAAQY,YAAcF,EACtBT,EAAQW,YAAcD,GAI1BE,aAAY,YAlBkB,SAACC,GAC3B,IAAMN,EAAOO,KAAKC,MAAMF,EAAO,OACzBL,EAAQM,KAAKC,MAAOF,EAAO,MAAR,MACnBJ,EAAOK,KAAKC,MAAOF,EAAO,KAAR,KAClBH,EAAOI,KAAKC,MAAOF,EAAO,IAAe,KAC/CP,EAASC,EAAMC,EAAOC,EAAMC,GAe5BM,CADaf,EAAQE,WAAWc,UAAYZ,KAAKa,SAElD,O","file":"main.ffafa972e3e48c250a8a.js","sourcesContent":["import './styles.css';\n\n\nconst daysRef = document.querySelector('span[data-value=\"days\"]');\nconst hoursRef = document.querySelector('span[data-value=\"hours\"]');\nconst minsRef = document.querySelector('span[data-value=\"mins\"]');\nconst secsRef = document.querySelector('span[data-value=\"secs\"]');\n\n\nclass CountdownTimer {\n    constructor({ selector, targetDate }) {\n      this.selector = selector;\n      this.targetDate = targetDate;\n    }\n};\n\n\nconst newDate = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 01, 2021'),\n});\n\n\nconst countingRemainingTime = (time) => {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n    timeLeft(days, hours, mins, secs);\n\n};\n\n\nconst timeLeft = (days, hours, mins, secs) => {\n    daysRef.textContent = days;\n    hoursRef.textContent = hours;\n    minsRef.textContent = mins;\n    secsRef.textContent = secs;\n};\n\n\nsetInterval(() => {\n    const time = newDate.targetDate.getTime() - Date.now();\n    countingRemainingTime(time);\n}, 1000);"],"sourceRoot":""}